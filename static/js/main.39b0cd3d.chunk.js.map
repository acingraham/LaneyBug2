{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["API_ENDPOINT","VIEW_ENDPOINT","Player","list","useState","selectedIndex","setSelectedIndex","rand","count","set","Set","size","length","randomIndex","Math","floor","random","add","Array","from","getRandom","items","setItems","recordView","groupId","userId","url","console","log","fetch","headers","method","mode","body","JSON","stringify","then","res","json","data","catch","err","useRecordView","className","onChange","showThumbs","useKeyboardArrows","showStatus","autoFocus","slice","map","index","controls","loop","height","width","playing","onError","type","newItems","indexOf","splice","onEnded","x","onPlay","useLocalStorage","name","parse","localStorage","getItem","array","setArray","item","newArray","concat","jsonString","setItem","Admin","setIndex","addToLaney","addToSkip","addToOther","videoList","setVideoList","useEffect","a","response","videoListJson","laneyJson","skipJson","otherJson","processedVideos","processedVideosSet","filter","video","has","fetchData","laneyBug","prev","skip","back","other","onKeyPress","event","key","onClick","View","file","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39b0cd3d.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport ReactPlayer from 'react-player';\nimport { Carousel } from 'react-responsive-carousel';\nimport {\n  Switch,\n  Route,\n} from 'react-router-dom';\nimport 'react-responsive-carousel/lib/styles/carousel.min.css';\nimport './App.css';\n\n// TODO - Move these calls to a service\n// const API_ENDPOINT = 'https://xrkgyvv5tk.execute-api.us-east-1.amazonaws.com/prod/petcuddleotron';\nconst API_ENDPOINT = 'https://xrkgyvv5tk.execute-api.us-east-1.amazonaws.com/prod';\nconst VIEW_ENDPOINT = `${API_ENDPOINT}/view`;\nconst FAVORITE_ENDPOINT = `${API_ENDPOINT}/favorite`;\n\nfunction getRandom(list, count) {\n  const set = new Set();\n  while (set.size < count && count < list.length) {\n    const randomIndex = Math.floor(Math.random() * list.length);\n    set.add(list[randomIndex]);\n  }\n  return Array.from(set);\n}\n\nfunction useRecordView(groupId, userId) {\n  // TODO - Might want to rename this s3ObjectName throughout the code\n  return function(url) {\n    // TODO - Have this trigger the actual request. Consider adding error logging if it's unable to save for some reason.\n    console.log('recording view of', groupId, userId, url);\n    fetch(VIEW_ENDPOINT, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify({\n        groupId,\n        userId,\n        // TODO - Should rename url to something else\n        url,\n      })\n    })\n      .then(res => res.json())\n      .then(data => console.log('SUCCESS', data))\n      .catch(err => console.log('ERROR', err));\n\n  };\n}\n\nfunction useRecordFavorite(groupId, userId) {\n  return function(url, isFavorite) {\n    // TODO - Have this trigger the actual request. Consider adding error logging if it's unable to save for some reason.\n    console.log('recording favorite of', groupId, userId, url, isFavorite);\n    // TODO - Switch to await / async\n    fetch(FAVORITE_ENDPOINT, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      method: 'PUT',\n      mode: 'cors',\n      body: JSON.stringify({\n        groupId,\n        userId,\n        // TODO - Should rename url to something else\n        url,\n        isFavorite,\n      })\n    })\n      .then(res => res.json())\n      .then(data => console.log('SUCCESS', data))\n      .catch(err => console.log('ERROR', err));\n\n  };\n}\n\n// TODO - I think this should be pushed down the component hierarchy. Reread Dan Abramov's blogpost about this. Seems odd to have the Player return a carousel of ReactPlayers.\nfunction Player({list}) {\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  // TODO - Handle bad urls better\n  const rand = getRandom(list, 20);\n  const [items, setItems] = useState(rand);\n\n  // TODO - This logic should be at the Carousel level. Should see if it has a prop or functionality to handle this case\n  const onError = (err, url) => {\n    if (err.type === 'error') {\n      setItems(items => {\n        const newItems = [...items];\n        const index = newItems.indexOf(url);\n        newItems.splice(index, 1);\n        return newItems;\n      });\n    }\n  };\n\n  // TODO - Shouldn't be hardcoding this\n  const groupId = 'laney';\n  // TODO - Should isolate the mapping of url to group somewhere. Can get this group from the router route.\n  const userId = 'andrew';\n  const recordView = useRecordView(groupId, userId);\n\n  return (\n    <div className=\"App\">\n      <Carousel onChange={setSelectedIndex} showThumbs={false} useKeyboardArrows showStatus={false} autoFocus>\n        {items.slice(0, 10).map((url, index) => (\n          <div key={url}>\n            <ReactPlayer\n              url={`https://laneybug.s3.amazonaws.com/videos/${url}`}\n              controls\n              loop\n              height=\"auto\"\n              width=\"auto\"\n              playing={index === selectedIndex}\n              onError={err => onError(err, url)}\n              onEnded={x => console.log('ended', x)}\n              onPlay={() => recordView(url)}\n            />\n          </div>\n        ))}\n      </Carousel>\n    </div>\n  );\n}\n\nfunction Favorite(url) {\n  // TODO - This should be a toggle\n  const favorite = (url) => {\n\n  };\n\n  const [isFavorite, setIsFavorite] = useState(false);\n\n  const groupId = 'laney';\n  const userId = 'andrew';\n\n  useEffect(() => {\n    console.log('userId', userId);\n    console.log('url', url);\n    // TODO - Fix url.url\n    fetch(`${FAVORITE_ENDPOINT}/${userId}/${url.url}`, {\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      method: 'GET',\n      mode: 'cors',\n    })\n      .then(res => res.json())\n      .then(data => console.log('SUCCESS', data))\n      .catch(err => console.log('ERROR', err));\n  }, [url]);\n\n  return (\n    <span onClick={() => favorite(url)}>Fav: <span>{isFavorite.toString()}</span></span>\n  );\n}\n\n// TODO - Rename, make it so it only allows an item in one section, and skip items if they're already in localStorage\nfunction useLocalStorage(name) {\n  const [array, setArray] = useState(JSON.parse(localStorage.getItem(name)) || []);\n\n  return item => {\n    const newArray = array.concat(item);\n    const jsonString = JSON.stringify(newArray);\n    localStorage.setItem(name, jsonString);\n    setArray(newArray);\n  };\n}\n\nfunction Admin() {\n  const [index, setIndex] = useState(0);\n  const addToLaney = useLocalStorage('laney');\n  const addToSkip = useLocalStorage('skip');\n  const addToOther = useLocalStorage('other');\n\n  // TODO - Move this to a separate hook\n  const [videoList, setVideoList] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      let response = await fetch('videoList.json');\n      let videoListJson = await response.json();\n\n      response = await fetch('laney.json');\n      const laneyJson = await response.json();\n\n      response = await fetch('skip.json');\n      const skipJson = await response.json();\n\n      response = await fetch('other.json');\n      const otherJson = await response.json();\n\n      const processedVideos = laneyJson.concat(skipJson, otherJson);\n      const processedVideosSet = new Set(processedVideos);\n      videoListJson = videoListJson.filter(video => !processedVideosSet.has(video));\n\n      setVideoList(videoListJson);\n    }\n    fetchData();\n  }, []);\n\n  if (!videoList.length) {\n    return null;\n  }\n\n  const laneyBug = () => {\n    addToLaney(videoList[index]);\n    setIndex(prev => prev + 1);\n  };\n  const skip = () => {\n    addToSkip(videoList[index]);\n    setIndex(prev => prev + 1);\n  };\n  const back = () => {\n    setIndex(prev => prev - 1);\n  };\n  const other = () => {\n    addToOther(videoList[index]);\n    setIndex(prev => prev + 1);\n  };\n  const onKeyPress = event => {\n    console.log('keypress');\n    if (event.key === ' ') {\n      laneyBug();\n    } else if (event.key === 'o') {\n      other();\n    } else if (event.key === 'b') {\n      back();\n    }\n  };\n  const onError = (err, url) => {\n    if (err.type === 'error') {\n      skip();\n    }\n  };\n\n  return (\n    <div onKeyPress={onKeyPress}>\n      <div>{index} / {videoList.length}</div>\n      <div className=\"button-section\">\n        <button onClick={laneyBug}>LaneyBug</button>\n        <button onClick={skip}>Skip</button>\n        <button onClick={back}>Back</button>\n        <button onClick={other}>Other</button>\n      </div>\n      <ReactPlayer\n        url={`https://laneybug.s3.amazonaws.com/videos/${videoList[index]}`}\n        controls\n        loop\n        height=\"auto\"\n        width=\"auto\"\n        playing={true}\n        onError={err => onError(err, videoList[index])}\n        className=\"admin-player\"\n      />\n    </div>\n  );\n}\n\nfunction View({file}) {\n  const [videoList, setVideoList] = useState([]);\n  useEffect(() => {\n    async function fetchData() {\n      // const response = await fetch('videoList.json');\n      const response = await fetch(file);\n      const json = await response.json();\n      setVideoList(json);\n    }\n    fetchData();\n  }, [file]);\n\n  if (!videoList.length) {\n    return null;\n  }\n\n  return <Player list={videoList} />;\n}\n\nfunction App() {\n  return (\n    <Switch>\n      <Route path=\"/admin\">\n        <Admin />\n      </Route>\n      <Route path=\"/other\">\n        <View file=\"other.json\" />\n      </Route>\n      <Route path=\"/skip\">\n        <View file=\"skip.json\" />\n      </Route>\n      <Route path=\"/\">\n        <View file=\"laney.json\" />\n      </Route>\n    </Switch>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}